{"version":3,"sources":["components/NavBar/index.js","components/Header/index.js","components/Thumbnail/index.js","App.js","index.js"],"names":["NavBar","props","react_default","a","createElement","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","score","topScore","announcement","Header","Thumbnail","value","onClick","clickAction","src","image","alt","randomPic","picArray","guesses","length","index","Math","floor","random","temp","App","state","Pics","clickedImages","gameOver","console","log","concat","_this","includes","newGame","increaseScore","push","setState","resetPics","randomArray","_this2","this","components_NavBar","components_Header","map","pic","components_Thumbnail","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1936349e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction NavBar(props) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <a className=\"navbar-brand\" href=\"/\">Clicky Game</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarText\">\r\n        \r\n        <span className=\"navbar-text float-right\">\r\n          Score: {props.score} | Top Score: {props.topScore} | {props.announcement}\r\n        </span>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport \"./style.css\"\r\n\r\nfunction Header() {\r\n  return (\r\n    <header>\r\n      <h1 className=\"display-1\">CLICKY GAAAME</h1>\r\n      <h2>Click on a thing, but don't click on that same thing again. OR ELSE YOU LOSE.</h2> \r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\nfunction Thumbnail (props) {\r\n  return (\r\n    <div className=\"col-md-3\" id={props.id} value={props.id} onClick={() => props.clickAction(props.id)}>\r\n    <img src={props.image} alt=\"bw-comic\" className=\"img-thumbnail\" ></img>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Thumbnail;","import React, { Component } from \"react\";\n\nimport NavBar from \"./components/NavBar\";\nimport Header from \"./components/Header\";\nimport Thumbnail from \"./components/Thumbnail\";\nimport Pics from \"./pics.json\";\n\n\n\nconst randomPic = (picArray) => {\n  let guesses = picArray.length;\n\n  while (guesses > 0) {\n    let index = Math.floor(Math.random() * guesses);\n    guesses--;\n    let temp = picArray[guesses];\n    picArray[guesses] = picArray[index];\n    picArray[index] = temp;\n  }\n  return picArray;\n}\n\n\nclass App extends Component {\n  \n  state = {\n    score:0,\n    topScore:0,\n    Pics,\n    clickedImages: [],\n    gameOver: false,\n    \n    announcement: \"\"\n  };\n\n  clickAction = (id) => {\n    console.log(`Clicked ID: ${id}`);\n    if (!this.state.clickedImages.includes(id)){\n      this.increaseScore();\n      this.state.clickedImages.push(id);\n      this.setState({\n        gameOver: false\n      });\n    } else {\n      this.newGame();\n    }\n  };\n\n  increaseScore = () => {\n    let score = this.state.score + 1;\n    console.log(`Current Score: ${score}`);\n    if (score === this.state.Pics.length) {\n      this.setState({\n        announcement: \"WINNER WINNER CHICKEN DINNER!\",\n        topScore: score,\n        score: 0,\n        clickedImages: [],\n        Pics,\n        gameOver: false\n      });\n    } else if (score > this.state.topScore) {\n      this.setState({\n        topScore: score,\n        score: score,\n        announcement: \"HIGH SCORE\"\n      })\n    } else {\n      this.setState ({\n        score: score,\n        announcement: \"YOU GOT IT!\"\n      });\n    }\n    this.resetPics();\n  };\n\n  newGame = () => {\n    this.setState({\n      score: 0,\n      topScore: this.state.topScore,\n      Pics,\n      gameOver:true,\n      clickedImages: [],\n\n      announcement: \"LOOOOSER!\"\n    });\n    console.log(`GameOver: ${this.state.gameOver}`);\n    this.resetPics();\n  };\n\n  resetPics = () => {\n    let randomArray = randomPic(Pics);\n    this.setState({\n      Pics: randomArray\n    })\n  };\n\n  \n  render() {\n    return (\n\n      <div>\n        <NavBar \n        score = {this.state.score}\n        topScore = {this.state.topScore}\n        announcement = {this.state.announcement}\n        />\n        <Header />\n        <div className=\"container\">\n          <div className=\"row\">\n\n          {this.state.Pics.map(pic => (\n            <Thumbnail \n            id={pic.id}\n            image={pic.image}\n            clickAction={this.clickAction}\n            />\n          ))}\n               \n          </div>\n          {/* <image src=\"..\\assets\\images\\Calvin.jpg\" alt=\"calvin\"></image> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}